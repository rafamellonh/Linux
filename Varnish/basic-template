vcl 4.0;

# Default backend definition. Set this to point to your content server.

import std;
import directors;

backend site01 {
    .host = "192.168.2.72";
    .port = "80";
}


backend site02 {
    .host = "192.168.2.73";
    .port = "80";
}


sub vcl_init {
  # Called when VCL is loaded, before any requests pass through it.
  # Typically used to initialize VMODs.
  new cluster_uat = directors.round_robin();
  cluster_uat.add_backend(site01);
  cluster_uat.add_backend(site02);
}



sub vcl_recv {
    # Happens before we check if we have this in cache already.
    #
    # Typically you clean up the request here, removing cookies you don't need,
    # rewriting the request, etc.

 set req.backend_hint = cluster_uat.backend(); # send all traffic to the vdir director


  # Forward real IP address to the backend
  # Akamai uses a different header (True-Client-IP) for X-Forwarded-For
  # https://community.akamai.com/videos/1232
  if (req.http.True-Client-IP) {
      if (req.http.X-Forwarded-For) {
          set req.http.X-Forwarded-For = req.http.X-Forwarded-For + ", " + req.http.True-Client-IP;
      } else {
          set req.http.X-Forwarded-For = req.http.True-Client-IP;
      }
  }

  # Do not allow outside access to cron.php or install.php or update.php
  if (req.url ~ "^/(cron|install|update)\.php$") {
  # Have Varnish throw the error directly.
      return (synth(404, "404 - Page not found"));
  }

  return (pipe);
}

sub vcl_backend_response {
    # Happens after we have read the response headers from the backend.
    #
    # Here you clean the response headers, removing silly Set-Cookie headers
    # and other mistakes your backend does.
}

sub vcl_deliver {
    # Happens when we have all the pieces we need, and are about to send the
    # response to the client.
    #
    # You can do accounting or modifying the final object here.

